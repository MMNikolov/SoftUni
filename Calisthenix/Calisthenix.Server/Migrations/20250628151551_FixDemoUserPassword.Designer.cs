// <auto-generated />
using Calisthenix.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Calisthenix.Server.Migrations
{
    [DbContext(typeof(CalisthenixDbContext))]
    [Migration("20250628151551_FixDemoUserPassword")]
    partial class FixDemoUserPassword
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Calisthenix.Server.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Equipment")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Upper Body",
                            Description = "A basic push-up exercise.",
                            Difficulty = "Beginner",
                            Equipment = "None",
                            ImageUrl = "...",
                            Name = "Push-up",
                            UserId = 1,
                            VideoUrl = "..."
                        });
                });

            modelBuilder.Entity("Calisthenix.Server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 162, 244, 22, 7, 196, 148, 177, 44, 230, 67, 83, 173, 99, 145, 185, 38, 71, 137, 76, 139, 91, 30, 180, 90, 210, 152, 194, 132, 93, 125, 25, 204, 108, 2, 239, 54, 151, 251, 12, 170, 55, 138, 178, 52, 9, 44, 211, 103, 10, 179, 43, 161, 90, 145, 135, 100, 174, 67, 232, 213, 119, 30, 53, 154 },
                            PasswordSalt = new byte[] { 141, 178, 163, 24, 240, 98, 72, 31, 45, 144, 91, 70, 167, 250, 234, 99, 114, 136, 203, 25, 48, 35, 36, 88, 65, 214, 122, 43, 47, 21, 156, 83, 56, 163, 248, 112, 86, 99, 181, 111, 18, 4, 94, 249, 148, 228, 104, 182, 7, 101, 209, 43, 25, 207, 86, 173, 81, 119, 29, 77, 61, 208, 67, 251, 201, 190, 75, 115, 46, 21, 40, 139, 56, 32, 147, 12, 202, 53, 52, 196, 181, 30, 248, 120, 55, 28, 12, 11, 10, 146, 1, 117, 36, 244, 241, 138, 31, 73, 71, 116, 132, 187, 33, 18, 251, 21, 135, 187, 99, 103, 101, 203, 65, 47, 198, 45, 47, 65, 106, 52 },
                            Username = "demo"
                        });
                });

            modelBuilder.Entity("Calisthenix.Server.Models.Exercise", b =>
                {
                    b.HasOne("Calisthenix.Server.Models.User", "User")
                        .WithMany("Exercises")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Calisthenix.Server.Models.User", b =>
                {
                    b.Navigation("Exercises");
                });
#pragma warning restore 612, 618
        }
    }
}
